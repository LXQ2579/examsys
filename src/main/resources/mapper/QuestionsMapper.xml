<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
dao层接口的全限定名和namespace一样
dao层接口中的方法名和映射文件中增删改查配置的statement id一致
方法的参数和配置的输入参数保持一致
方法的返回值类型和配置中返回类型保持一致
 -->
<mapper namespace="com.damo.examsys.dao.QuestionsDao">

    <resultMap id="questionsMap" type="questions">
        <id property="qId" column="qId"/>
        <result property="title" column="title"/>
        <result property="optionA" column="optionA"/>
        <result property="optionB" column="optionB"/>
        <result property="optionC" column="optionC"/>
        <result property="optionD" column="optionD"/>
        <result property="standardAnswer" column="standardAnswer"/>
        <result property="answerDetail" column="answerDetail"/>
        <result property="subjectId" column="subjectId"/>
        <result property="subjectName" column="subjectName"/>
        <result property="typeId" column="typeId"/>
        <result property="quesTypeName" column="quesTypeName"/>
        <result property="remark" column="remark"/>
        <result property="score" column="score"/>
        <association property="quesType" javaType="quesType">
            <id property="quesTypeId" column="tId"/>
            <result property="quesTypeName" column="quesTypeName"/>
        </association>
        <association property="subject" javaType="subject">
            <id property="sId" column="sId"/>
            <result property="sName" column="subjectName"/>
        </association>

    </resultMap>

    <select id="findAll" resultMap="questionsMap">
        select q.qId, q.title, q.optionA, q.optionB, q.optionB, q.optionC, q.optionD, q.standardAnswer, q.answerDetail, q.subjectId, q.typeId, t.tName as quesTypeName, q.remark, q.score, t.tId, s.sId, s.sName as subjectName
        from questions q
        left join questions_type t on q.typeId = t.tid
        left join subject s on q.subjectId = s.sid
        <where>
            <if test="questionName != null and questionName != ''">
                and q.qName like CONCAT('%','${questionName}','%')
            </if>
            <if test="typeId != null and typeId != ''">
                and q.typeId = #{typeId}
            </if>
            <if test="subjectId != null and subjectId != ''">
                and q.subjectId = #{subjectId}
            </if>
        </where>
    </select>

    <insert id="batchInsert" parameterType="list">
        insert into
        questions
        values
        <foreach collection="list" separator="," item="questions">
        (null,
        #{questions.title},
        #{questions.typeId},
        #{questions.optionA},
        #{questions.optionB},
        #{questions.optionC},
        #{questions.optionD},
        #{questions.standardAnswer},
        #{questions.answerDetail},
        #{questions.subjectId},
        #{questions.remark},
        #{questions.score})
        </foreach>
    </insert>


    <select id="findById" resultMap="questionsMap" parameterType="integer">
          select q.qId, q.title, q.optionA, q.optionB, q.optionB, q.optionC, q.optionD, q.standardAnswer, q.answerDetail, q.subjectId, q.typeId, t.tName as quesTypeName, q.remark, q.score, t.tId, s.sId, s.sName as subjectName
        from
        questions q, questions_type t, subject s
        where q.subjectId = s.sid and q.typeId = t.tid where q.qId = #{qId}
    </select>

    <update id="update" parameterType="questions">
        update questions q set(title, optionA, optionB, optionC, optionD, standardAnswer, answerDetail, subjectId, typeId, remark, score) values (#{title}, #{optionA}, #{optionB}, #{optionC}, #{optionD}, #{standardAnswer}, #{answerDetail}, #{subjectId}, #{typeId}, #{remark}, #{score}) where q.qId = #{qId}
    </update>

    <insert id="add" parameterType="questions">
        insert into questions values (null, #{title}, #{typeId}, #{optionA}, #{optionB}, #{optionC}, #{optionD}, #{standardAnswer}, #{answerDetail}, #{subjectId}, #{remark}, #{score})
    </insert>

    <delete id="deleteById" parameterType="integer">
        delete q from questions q where q.qId = #{qId}
    </delete>


</mapper>
